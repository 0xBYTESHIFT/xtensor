.. Copyright (c) 2016, Johan Mabille and Sylvain Corlay

   Distributed under the terms of the BSD 3-Clause License.

   The full license is in the file LICENSE, distributed with this software.

numpy to xtensor cheat sheet
============================

.. raw:: html

   <style>
   .rst-content table.docutils {
       width: 100%;
       table-layout: fixed;
       border: none;
   }

   table.docutils th {
       text-align: center;
   }

   table.docutils .line-block {
       margin-left: 0;
       margin-bottom: 0;
   }

   table.docutils code.literal {
       color: initial;
   }

   code.docutils {
       background: initial;
       border: none;
   }

   * {
       border: none;
   }

   .rst-content table.docutils td {
       border-bottom: none;
       border-left: none;
   }
   </style>

Creating new arrays
-------------------

+--------------------------------------------+-----------------------------------------------+
|             Python 3 - numpy               |               C++ 14 - xtensor                |
+============================================+===============================================+
| ``np.array([[3, 4], [5, 6]])``             | ``xt::xarray<double>({{3, 4}, {5, 6}})``      |
+--------------------------------------------+-----------------------------------------------+
| ``np.linspace(1.0, 10.0, 100)``            | ``xt::linspace<double>(1.0, 10.0, 100)``      |
+--------------------------------------------+-----------------------------------------------+
| ``np.logspace(2.0, 3.0, 4)``               | ``xt::logspace<double>(2.0, 3.0, 4)``         |
+--------------------------------------------+-----------------------------------------------+
| ``np.arange(3, 7)``                        | ``xt::arange(3, 7)``                          |
+--------------------------------------------+-----------------------------------------------+
| ``np.eye(4)``                              | ``xt::eye(4)``                                |
+--------------------------------------------+-----------------------------------------------+
| ``np.zeros([3, 4])``                       | ``xt::zeros<double>({3, 4})``                 |
+--------------------------------------------+-----------------------------------------------+
| ``np.ones([3, 4])``                        | ``xt::ones<double>({3, 4})``                  |
+--------------------------------------------+-----------------------------------------------+

Broadcasting
------------

+--------------------------------------------+-----------------------------------------------+
|              Python 3 - numpy              |                C++ 14 - xtensor               |
+============================================+===============================================+
| ``a[:, np.newaxis]``                       | ``xt::view(a, xt::all(), xt::newaxis())``     |
+--------------------------------------------+-----------------------------------------------+
| ``np.broadcast(a, [4, 5, 7])``             | ``xt::broadcast(a, {4, 5, 7})``               |
+--------------------------------------------+-----------------------------------------------+
| ``np.vectorize(f)``                        | ``xt::vectorize(f)``                          |
+--------------------------------------------+-----------------------------------------------+

Random
------

+--------------------------------------------+-----------------------------------------------+
|            Python 3 - numpy                |                C++ 14 - xtensor               |
+============================================+===============================================+
| ``np.random.randn(10, 10)``                | ``xt::random::randn<double>({10, 10})``       |
+--------------------------------------------+-----------------------------------------------+
| ``np.random.randint(10, 10)``              | ``xt::random::randint<int>({10, 10})``        |
+--------------------------------------------+-----------------------------------------------+
| ``np.random.rand(3, 4)``                   | ``xt::random::rand<double>({3, 4})``          |
+--------------------------------------------+-----------------------------------------------+

Concatenation
-------------

+--------------------------------------------+-----------------------------------------------+
|            Python 3 - numpy                |                C++ 14 - xtensor               |
+============================================+===============================================+
| ``np.stack([a, b, c], axis=1)``            | ``xt::stack(xtuple(a, b, c), 1)``             |
+--------------------------------------------+-----------------------------------------------+
| ``np.concatenate([a, b, c], axis=1)``      | ``xt::concatenate(xtuple(a, b, c), 1)``       |
+--------------------------------------------+-----------------------------------------------+

Iteration
---------

+--------------------------------------------+------------------------------------------------------+
|            Python 3 - numpy                |                C++ 14 - xtensor                      |                         
+============================================+======================================================+
| | ``> for x in np.nditer(a):``             | | ``> for (auto it=a.xbegin(); it!=a.xend(); ++it)`` |
| | ``>     print(x)``                       | | ``>     std::cout << *it << std::endl;``           |
+--------------------------------------------+------------------------------------------------------+

Logical
-------

+--------------------------------------------+-----------------------------------------------+
|            Python 3 - numpy                |                C++ 14 - xtensor               |
+============================================+===============================================+
| ``np.where(condition, a, b)``              | ``xt::where(condition, a, b)``                |
+--------------------------------------------+-----------------------------------------------+
| ``np.logical_and(a, b)``                   | ``a && b``                                    |
+--------------------------------------------+-----------------------------------------------+
| ``np.logical_or(a, b)``                    | ``a || b``                                    |
+--------------------------------------------+-----------------------------------------------+
